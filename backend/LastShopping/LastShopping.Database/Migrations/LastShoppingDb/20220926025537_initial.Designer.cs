// <auto-generated />
using System;
using LastShopping.Database.DbContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LastShopping.Database.Migrations.LastShoppingDb
{
    [DbContext(typeof(LastShoppingDbContext))]
    [Migration("20220926025537_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("廠商名稱");

                    b.HasKey("Id");

                    b.ToTable("Factory");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("產品圖片Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("產品圖片路徑");

                    b.Property<int>("ProductInformationId")
                        .HasColumnType("int")
                        .HasComment("產品Id");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProductInformationId");

                    b.ToTable("ProductImgs");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("產品Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<int>("FactoryId")
                        .HasColumnType("int")
                        .HasComment("廠商Id");

                    b.Property<int>("Inventory")
                        .HasColumnType("int")
                        .HasComment("庫存量");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("產品名稱");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主要圖片路徑");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasComment("產品類型Id");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int")
                        .HasComment("售價");

                    b.Property<int>("SuggestedPrice")
                        .HasColumnType("int")
                        .HasComment("建議售價");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.HasIndex("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductInformation");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("產品類型Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("產品類型");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("進貨訂單資訊Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.PurchaseOrderDetails", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int")
                        .HasComment("進貨訂單Id");

                    b.Property<int>("ProductInformationId")
                        .HasColumnType("int")
                        .HasComment("產品Id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("進貨數量");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("進貨成本");

                    b.Property<bool>("check")
                        .HasColumnType("bit")
                        .HasComment("是否結單");

                    b.HasKey("PurchaseOrderId", "ProductInformationId");

                    b.HasIndex("ProductInformationId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("銷售訂單Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者Id");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.SalesOrderDetails", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int")
                        .HasComment("銷售訂單Id");

                    b.Property<int>("ProductInformationId")
                        .HasColumnType("int")
                        .HasComment("產品Id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("銷售數量");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasComment("到貨時間");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改時間");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("訂單狀態: 0成立訂單, 1撿貨, 2理貨, 3出貨, 4已送達, 5成立退貨, 6商品回收中, 7檢驗中, 8退款中, 9已退款");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("銷售價格");

                    b.HasKey("SalesOrderId", "ProductInformationId");

                    b.HasIndex("ProductInformationId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("SalesOrderDetails");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductImg", b =>
                {
                    b.HasOne("LastShopping.Database.LastShoppingModels.ProductInformation", "ProductInformation")
                        .WithMany("ProductImgs")
                        .HasForeignKey("ProductInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductInformation");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductInformation", b =>
                {
                    b.HasOne("LastShopping.Database.LastShoppingModels.Factory", "Factory")
                        .WithMany("ProductInformations")
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastShopping.Database.LastShoppingModels.ProductType", "ProductType")
                        .WithMany("ProductInformations")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.PurchaseOrderDetails", b =>
                {
                    b.HasOne("LastShopping.Database.LastShoppingModels.ProductInformation", "ProductInformation")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("ProductInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastShopping.Database.LastShoppingModels.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductInformation");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.SalesOrderDetails", b =>
                {
                    b.HasOne("LastShopping.Database.LastShoppingModels.ProductInformation", "ProductInformation")
                        .WithMany()
                        .HasForeignKey("ProductInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LastShopping.Database.LastShoppingModels.SalesOrder", "SalesOrder")
                        .WithMany()
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductInformation");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.Factory", b =>
                {
                    b.Navigation("ProductInformations");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductInformation", b =>
                {
                    b.Navigation("ProductImgs");

                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.ProductType", b =>
                {
                    b.Navigation("ProductInformations");
                });

            modelBuilder.Entity("LastShopping.Database.LastShoppingModels.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
